project(injected)

cmake_minimum_required(VERSION 2.8)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${PROJECT_BINARY_DIR}/bin)

macro(replace_flags var these those)
    if ("${${var}}" MATCHES "${these}")
        string(REGEX REPLACE "${these}" "${those}" ${var} "${${var}}")
        message(STATUS "info: ${var} changed to '${${var}}'")
    endif()
    message(STATUS "info: ${var}='${${var}}'")
endmacro()

macro(msvc_link_to_static_crt)
    if (MSVC)
        set(has_correct_flag 0)
        foreach(lang C CXX)
            foreach(suffix "" _DEBUG _MINSIZEREL _RELEASE _RELWITHDEBINFO)
                replace_flags("CMAKE_${lang}_FLAGS${suffix}" "/MD" "/MT")
            endforeach()
        endforeach()
    endif()
endmacro()

add_definitions(-DWINDOWS)
foreach(lang C CXX)
    if ("${CMAKE_${lang}_FLAGS}" MATCHES "/W[1-3]")
        #string(REGEX REPLACE "/W[1-3]" "/W4 /WX" CMAKE_${lang}_FLAGS "${CMAKE_${lang}_FLAGS}")
        message(STATUS "Replacing /W[1-3] with /W4 /WX...")
    else ("${CMAKE_${lang}_FLAGS}" MATCHES "/W[1-3]")
        #set(CMAKE_${lang}_FLAGS "${CMAKE_${lang}_FLAGS} /W4 /WX")
        message(STATUS "Adding /W4 /WX...")
    endif ("${CMAKE_${lang}_FLAGS}" MATCHES "/W[1-3]")
endforeach(lang)
msvc_link_to_static_crt()
SET(LINK_LIBS ${LINK_LIBS} Dbghelp.lib Ws2_32.lib)

if (${CMAKE_SIZEOF_VOID_P} EQUAL 8)
    #SET(LINK_LIBS ${LINK_LIBS} ${PROJECT_SOURCE_DIR}/lib/LDE64x64.lib)
    SET(LINK_LIBS ${LINK_LIBS} capstone-static)
    #SET(LINK_LIBS ${LINK_LIBS} ${PROJECT_SOURCE_DIR}/lib/libsslMD.lib)
    #SET(LINK_LIBS ${LINK_LIBS} ${PROJECT_SOURCE_DIR}/lib/libcryptoMD.lib)
elseif (${CMAKE_SIZEOF_VOID_P} EQUAL 4)
    #SET(LINK_LIBS ${LINK_LIBS} ${PROJECT_SOURCE_DIR}/lib/LDE64.lib)
    SET(LINK_LIBS ${LINK_LIBS} capstone-static)
    #SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SAFESEH:NO")
    #SET (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /SAFESEH:NO")
    #SET (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /SAFESEH:NO")
endif()

set(CAPSTONE_BUILD_STATIC_RUNTIME ON CACHE BOOL "")
set(CAPSTONE_BUILD_STATIC ON CACHE BOOL "")
set(CAPSTONE_BUILD_SHARED OFF CACHE BOOL "")
set(CAPSTONE_BUILD_DIET OFF CACHE BOOL "")
set(CAPSTONE_BUILD_TESTS OFF CACHE BOOL "")

set(CAPSTONE_ARM_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_ARM64_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_M68K_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_MIPS_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_PPC_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_SPARC_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_SYSZ_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_XCORE_SUPPORT OFF CACHE BOOL "")
set(CAPSTONE_X86_SUPPORT ON CACHE BOOL "")

add_subdirectory(components/capstone-next/)

add_subdirectory(src/)
add_subdirectory(test/)